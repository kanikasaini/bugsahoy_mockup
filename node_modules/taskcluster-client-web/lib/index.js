(function(e,t){'object'==typeof exports&&'object'==typeof module?module.exports=t(require('hawk'),require('query-string')):'function'==typeof define&&define.amd?define('taskcluster',['hawk','query-string'],t):'object'==typeof exports?exports.taskcluster=t(require('hawk'),require('query-string')):e.taskcluster=t(e.hawk,e.queryString)})(this,function(e,t){return function(e){function t(n){if(r[n])return r[n].exports;var a=r[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,t),a.l=!0,a.exports}var r={};return t.m=e,t.c=r,t.i=function(e){return e},t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var r=e&&e.__esModule?function(){return e['default']}:function(){return e};return t.d(r,'a',r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p='./',t(t.s=27)}([function(e,t,r){'use strict';var n=r(26),a=r.n(n),s=r(3),o=r.n(s),i=r(1),u=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};const l=/\/$/;class d{static create(e){return class extends d{constructor(t){super(u({},t,{reference:e}))}}}constructor(e={}){if(this.options=u({},d.defaults,e),this.options.baseUrl&&(this.options.baseUrl=this.options.baseUrl.replace(l,'')),0>this.options.randomizationFactor||1<=this.options.randomizationFactor)throw new Error('options.randomizationFactor must be between 0 and 1');if(this.options.accessToken)throw new Error('options.accessToken is no longer supported; use OIDCCredentialAgent');const{reference:t}=e;t&&(t.baseUrl&&(this.options.baseUrl=t.baseUrl.replace(l,'')),t.exchangePrefix&&(this.options.exchangePrefix=t.exchangePrefix),t.entries&&t.entries.forEach((e)=>{'function'===e.type&&(this[e.name]=function(...t){return this.validate(e,t),this.request(e,t)},this[e.name].entry=e),'topic-exchange'===e.type&&(this[e.name]=function(t){return this.normalizePattern(e,t)})}))}use(e){const t=u({},this.options,e);return new this.constructor(t)}getMethodExpectedArity({input:e,args:t}){return e?t.length+1:t.length}buildExtraData(e){if(!e)return;const{authorizedScopes:t}=this.options,{clientId:r,accessToken:n,certificate:a}=e;if(r&&n){const e={};if(a&&(e.certificate='string'==typeof a?JSON.parse(a):a),Array.isArray(t)&&(e.authorizedScopes=t),Object.keys(e).length)return window.btoa(JSON.stringify(e))}}buildEndpoint(e,t){return e.route.replace(/<([^<>]+)>/g,(r,n)=>{const a=e.args.indexOf(n);if(-1===a)return r;const s=t[a],o=typeof s;if('string'!=o&&'number'!=o)throw new Error(`URL parameter \`${n}\` expected a string but was provided type "${o}"`);return encodeURIComponent(s)})}buildUrl(e,...t){if(!e)throw new Error('buildUrl is missing required `method` argument');const a=e.entry;if(!a||'function'!==a.type)throw new Error('Method in buildUrl must be an API method from the same object');const s=a.query||[],o=0!==s.length,i=a.args.length;if(t.length!==i&&(!o||t.length!==i+1))throw new Error(`Method \`${a.name}.buildUrl\` expected ${i+1} argument(s) but received ${t.length+1}`);const u=this.buildEndpoint(a,t);t[i]&&Object.keys(t[i]).forEach((e)=>{if(!s.includes(e))throw new Error(`Method \`${a.name}\` expected options ${s.join(', ')} but received ${e}`)});const l=t[i]&&r.i(n.stringify)(t[i]),d=l?`?${l}`:'';return`${this.options.baseUrl}${u}${d}`}buildSignedUrl(e,...t){return new Promise(function(r,n){var a,s,i,u,l,d,p,y,c;let m;return e?(a=e.entry,'get'!==a.method.toLowerCase())?n(new Error('buildSignedUrl only works for GET requests')):(m=900,s=0!==(a.query||[]).length,i=a.args.length+(s?1:0),t.length>i&&(u=t.pop(),u.expiration&&(m=u.expiration),'number'!=typeof m))?n(new Error('options.expiration must be a number')):(l=this.buildUrl(e,...t),Promise.resolve(new Promise(function(e,t){return this.options.credentialAgent?Promise.resolve(this.options.credentialAgent.getCredentials()).then(e,t):e(this.options.credentials)}.bind(this))).then(function(e){try{return(d=e,!d)?n(new Error('buildSignedUrl missing required credentials')):(({clientId:p,accessToken:y}=d),!p)?n(new Error('buildSignedUrl missing required credentials clientId')):y?(c=o.a.client.bewit(l,{credentials:{id:p,key:y,algorithm:'sha256'},ttlSec:m,ext:this.buildExtraData(d)}),r(l.includes('?')?`${l}&bewit=${c}`:`${l}?bewit=${c}`)):n(new Error('buildSignedUrl missing required credentials accessToken'))}catch(e){return n(e)}}.bind(this),n)):n(new Error('buildSignedUrl is missing required `method` argument'))}.bind(this))}validate(e,t=[]){const r=this.getMethodExpectedArity(e),n=e.query||[],a=t.length;if(a!==r&&(0===n.length||a!==r+1))throw new Error(`${e.name} expected ${r} arguments but only received ${a}`);Object.keys(t[r]||{}).forEach((t)=>{if(!n.includes(t))throw new Error(`${t} is not a valid option for ${e.name}.
            Valid options include: ${n.join(', ')}`)})}normalizePattern(e,t){const r=t||{};if(!(r instanceof Object))throw new Error('routingKeyPattern must be an object');const n=e.routingKey.map((e)=>{const t=e.constant||r[e.name];if('number'==typeof t)return`${t}`;if('string'==typeof t){if(t.includes('.')&&!e.multipleWords)throw new Error(`routingKeyPattern "${t}" for ${e.name} cannot contain dots since it does not hold multiple words`);return t}if(null!=t)throw new Error(`routingKey value "${t}" is not a valid pattern for ${e.name}`);return e.multipleWords?'#':'*'}).join('.');return{routingKeyPattern:n,routingKeyReference:e.routingKey.map((e)=>u({},e)),exchange:`${this.options.exchangePrefix}${e.exchange}`}}request(e,t){return new Promise(function(a,s){var o,u,l,d,p,y;return o=this.getMethodExpectedArity(e),u=this.buildEndpoint(e,t),l=t[o]?`?${r.i(n.stringify)(t[o])}`:'',d=`${this.options.baseUrl}${u}${l}`,p={method:e.method},Promise.resolve(new Promise(function(e,t){return this.options.credentialAgent?Promise.resolve(this.options.credentialAgent.getCredentials()).then(e,t):e(this.options.credentials)}.bind(this))).then(function(n){try{return y=n,e.input&&(p.body=JSON.stringify(t[o-1])),y&&(p.credentials=y,p.extra=this.buildExtraData(y)),a(r.i(i.a)(d,p))}catch(e){return s(e)}}.bind(this),s)}.bind(this))}}t.a=d,Object.defineProperty(d,'defaults',{enumerable:!0,writable:!0,value:{credentials:null,authorizedScopes:null,timeout:30000,retries:5,delayFactor:100,randomizationFactor:0.25,maxDelay:30000,exchangePrefix:'',credentialAgent:null}})},function(e,t,r){'use strict';var n=r(3),a=r.n(n),s=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};const o=/^(application\/(json|x-javascript)|text\/(x-)?javascript|x-json)(;.*)?$/,i={credentials:'omit',retries:5,delayFactor:100,randomizationFactor:0.25,maxDelay:30000,timeout:30000,headers:{"Content-Type":'application/json'}},u=(e)=>Promise.resolve(e).then(()=>o.test(e.headers.get('Content-Type'))?e.json():null).then((t)=>{if(e.ok)return t;const r=t.message?t.message.split('---')[0]:e.statusText;return Promise.reject(Object.assign(new Error(r),{response:e,body:t}))});t.a=(e,t={})=>{const r=s({},i,t,{headers:s({},t.body&&i.headers,t.headers)}),{delayFactor:o,randomizationFactor:l,maxDelay:d,retries:p}=r;if('string'!=typeof r.credentials){const t=a.a.client.header(e,r.method.toUpperCase(),{credentials:{id:r.credentials.clientId,key:r.credentials.accessToken,algorithm:'sha256'},ext:r.extra});r.credentials='omit',r.headers.Authorization=t.field}return new Promise((t,a)=>{(function s(i){fetch(e,r).then(u).then(t).catch((e)=>{if(i>p)a(e);else{const e=Math.min((i-1)**2*o*(2*Math.random()*l+1-l),d);setTimeout(()=>s(i+1),e)}})})(r.retries)})}},function(e,t){'use strict';const r=new RegExp('^(\\s*(-|\\+))?(\\s*(\\d+)\\s*y((ears?)|r)?)?(\\s*(\\d+)\\s*mo(nths?)?)?(\\s*(\\d+)\\s*w((eeks?)|k)?)?(\\s*(\\d+)\\s*d(ays?)?)?(\\s*(\\d+)\\s*h((ours?)|r)?)?(\\s*(\\d+)\\s*m(in(utes?)?)?)?(\\s*(\\d+)\\s*s(ec(onds?)?)?)?\\s*$','i'),n=(e='')=>{const t=r.exec(e);if(!t)throw new Error(`"${e}" is not a valid time expression`);const n='-'===t[2]?-1:1;return{years:parseInt(t[4]||0,10)*n,months:parseInt(t[8]||0,10)*n,weeks:parseInt(t[11]||0,10)*n,days:parseInt(t[15]||0,10)*n,hours:parseInt(t[18]||0,10)*n,minutes:parseInt(t[22]||0,10)*n,seconds:parseInt(t[25]||0,10)*n}};t.f=n;const a=(e,t=new Date)=>{const r=n(e||'');return r.days+=30*r.months,r.days+=365*r.years,new Date(t.getTime()+1e3*(60*(60*(24*(7*r.weeks))))+1e3*(60*(60*(24*r.days)))+1e3*(60*(60*r.hours))+1e3*(60*r.minutes)+1e3*r.seconds)};t.a=a;t.b=(e,t)=>a(e,t).toJSON();const s=()=>{const e=crypto.getRandomValues(new Uint8Array(16));return e[6]=64|15&e[6],e[8]=128|63&e[8],e},o=(e=!1)=>{const t=s();return e&&(t[0]&=127),btoa(String.fromCharCode.apply(null,t)).replace(/\+/g,'-').replace(/\//g,'_').substring(0,22)};t.e=o;const i=()=>o(!0);t.d=i;t.c=i},function(t){t.exports=e},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'https://auth.taskcluster.net/v1',exchangePrefix:''},e)),this.listClients.entry={type:'function',method:'get',route:'/clients/',query:['prefix'],args:[],name:'listClients',stability:'stable',output:!0},this.client.entry={type:'function',method:'get',route:'/clients/<clientId>',query:[],args:['clientId'],name:'client',stability:'stable',output:!0},this.createClient.entry={type:'function',method:'put',route:'/clients/<clientId>',query:[],args:['clientId'],name:'createClient',stability:'stable',scopes:[['auth:create-client:<clientId>']],input:!0,output:!0},this.resetAccessToken.entry={type:'function',method:'post',route:'/clients/<clientId>/reset',query:[],args:['clientId'],name:'resetAccessToken',stability:'stable',scopes:[['auth:reset-access-token:<clientId>']],output:!0},this.updateClient.entry={type:'function',method:'post',route:'/clients/<clientId>',query:[],args:['clientId'],name:'updateClient',stability:'stable',scopes:[['auth:update-client:<clientId>']],input:!0,output:!0},this.enableClient.entry={type:'function',method:'post',route:'/clients/<clientId>/enable',query:[],args:['clientId'],name:'enableClient',stability:'stable',scopes:[['auth:enable-client:<clientId>']],output:!0},this.disableClient.entry={type:'function',method:'post',route:'/clients/<clientId>/disable',query:[],args:['clientId'],name:'disableClient',stability:'stable',scopes:[['auth:disable-client:<clientId>']],output:!0},this.deleteClient.entry={type:'function',method:'delete',route:'/clients/<clientId>',query:[],args:['clientId'],name:'deleteClient',stability:'stable',scopes:[['auth:delete-client:<clientId>']]},this.listRoles.entry={type:'function',method:'get',route:'/roles/',query:[],args:[],name:'listRoles',stability:'stable',output:!0},this.role.entry={type:'function',method:'get',route:'/roles/<roleId>',query:[],args:['roleId'],name:'role',stability:'stable',output:!0},this.createRole.entry={type:'function',method:'put',route:'/roles/<roleId>',query:[],args:['roleId'],name:'createRole',stability:'stable',scopes:[['auth:create-role:<roleId>']],input:!0,output:!0},this.updateRole.entry={type:'function',method:'post',route:'/roles/<roleId>',query:[],args:['roleId'],name:'updateRole',stability:'stable',scopes:[['auth:update-role:<roleId>']],input:!0,output:!0},this.deleteRole.entry={type:'function',method:'delete',route:'/roles/<roleId>',query:[],args:['roleId'],name:'deleteRole',stability:'stable',scopes:[['auth:delete-role:<roleId>']]},this.expandScopesGet.entry={type:'function',method:'get',route:'/scopes/expand',query:[],args:[],name:'expandScopesGet',stability:'deprecated',input:!0,output:!0},this.expandScopes.entry={type:'function',method:'post',route:'/scopes/expand',query:[],args:[],name:'expandScopes',stability:'stable',input:!0,output:!0},this.currentScopes.entry={type:'function',method:'get',route:'/scopes/current',query:[],args:[],name:'currentScopes',stability:'stable',output:!0},this.awsS3Credentials.entry={type:'function',method:'get',route:'/aws/s3/<level>/<bucket>/<prefix>',query:['format'],args:['level','bucket','prefix'],name:'awsS3Credentials',stability:'stable',scopes:[['auth:aws-s3:<level>:<bucket>/<prefix>']],output:!0},this.azureAccounts.entry={type:'function',method:'get',route:'/azure/accounts',query:[],args:[],name:'azureAccounts',stability:'stable',scopes:[['auth:azure-table:list-accounts']],output:!0},this.azureTables.entry={type:'function',method:'get',route:'/azure/<account>/tables',query:['continuationToken'],args:['account'],name:'azureTables',stability:'stable',scopes:[['auth:azure-table:list-tables:<account>']],output:!0},this.azureTableSAS.entry={type:'function',method:'get',route:'/azure/<account>/table/<table>/<level>',query:[],args:['account','table','level'],name:'azureTableSAS',stability:'stable',scopes:[['auth:azure-table:<level>:<account>/<table>']],output:!0},this.azureBlobSAS.entry={type:'function',method:'get',route:'/azure/<account>/containers/<container>/<level>',query:[],args:['account','container','level'],name:'azureBlobSAS',stability:'stable',scopes:[['auth:azure-blob:<level>:<account>/<container>']],output:!0},this.sentryDSN.entry={type:'function',method:'get',route:'/sentry/<project>/dsn',query:[],args:['project'],name:'sentryDSN',stability:'stable',scopes:[['auth:sentry:<project>']],output:!0},this.statsumToken.entry={type:'function',method:'get',route:'/statsum/<project>/token',query:[],args:['project'],name:'statsumToken',stability:'stable',scopes:[['auth:statsum:<project>']],output:!0},this.webhooktunnelToken.entry={type:'function',method:'get',route:'/webhooktunnel',query:[],args:[],name:'webhooktunnelToken',stability:'stable',scopes:[['auth:webhooktunnel']],output:!0},this.authenticateHawk.entry={type:'function',method:'post',route:'/authenticate-hawk',query:[],args:[],name:'authenticateHawk',stability:'stable',input:!0,output:!0},this.testAuthenticate.entry={type:'function',method:'post',route:'/test-authenticate',query:[],args:[],name:'testAuthenticate',stability:'stable',input:!0,output:!0},this.testAuthenticateGet.entry={type:'function',method:'get',route:'/test-authenticate-get/',query:[],args:[],name:'testAuthenticateGet',stability:'stable',output:!0},this.ping.entry={type:'function',method:'get',route:'/ping',query:[],args:[],name:'ping',stability:'stable'}}listClients(...e){return this.validate(this.listClients.entry,e),this.request(this.listClients.entry,e)}client(...e){return this.validate(this.client.entry,e),this.request(this.client.entry,e)}createClient(...e){return this.validate(this.createClient.entry,e),this.request(this.createClient.entry,e)}resetAccessToken(...e){return this.validate(this.resetAccessToken.entry,e),this.request(this.resetAccessToken.entry,e)}updateClient(...e){return this.validate(this.updateClient.entry,e),this.request(this.updateClient.entry,e)}enableClient(...e){return this.validate(this.enableClient.entry,e),this.request(this.enableClient.entry,e)}disableClient(...e){return this.validate(this.disableClient.entry,e),this.request(this.disableClient.entry,e)}deleteClient(...e){return this.validate(this.deleteClient.entry,e),this.request(this.deleteClient.entry,e)}listRoles(...e){return this.validate(this.listRoles.entry,e),this.request(this.listRoles.entry,e)}role(...e){return this.validate(this.role.entry,e),this.request(this.role.entry,e)}createRole(...e){return this.validate(this.createRole.entry,e),this.request(this.createRole.entry,e)}updateRole(...e){return this.validate(this.updateRole.entry,e),this.request(this.updateRole.entry,e)}deleteRole(...e){return this.validate(this.deleteRole.entry,e),this.request(this.deleteRole.entry,e)}expandScopesGet(...e){return this.validate(this.expandScopesGet.entry,e),this.request(this.expandScopesGet.entry,e)}expandScopes(...e){return this.validate(this.expandScopes.entry,e),this.request(this.expandScopes.entry,e)}currentScopes(...e){return this.validate(this.currentScopes.entry,e),this.request(this.currentScopes.entry,e)}awsS3Credentials(...e){return this.validate(this.awsS3Credentials.entry,e),this.request(this.awsS3Credentials.entry,e)}azureAccounts(...e){return this.validate(this.azureAccounts.entry,e),this.request(this.azureAccounts.entry,e)}azureTables(...e){return this.validate(this.azureTables.entry,e),this.request(this.azureTables.entry,e)}azureTableSAS(...e){return this.validate(this.azureTableSAS.entry,e),this.request(this.azureTableSAS.entry,e)}azureBlobSAS(...e){return this.validate(this.azureBlobSAS.entry,e),this.request(this.azureBlobSAS.entry,e)}sentryDSN(...e){return this.validate(this.sentryDSN.entry,e),this.request(this.sentryDSN.entry,e)}statsumToken(...e){return this.validate(this.statsumToken.entry,e),this.request(this.statsumToken.entry,e)}webhooktunnelToken(...e){return this.validate(this.webhooktunnelToken.entry,e),this.request(this.webhooktunnelToken.entry,e)}authenticateHawk(...e){return this.validate(this.authenticateHawk.entry,e),this.request(this.authenticateHawk.entry,e)}testAuthenticate(...e){return this.validate(this.testAuthenticate.entry,e),this.request(this.testAuthenticate.entry,e)}testAuthenticateGet(...e){return this.validate(this.testAuthenticateGet.entry,e),this.request(this.testAuthenticateGet.entry,e)}ping(...e){return this.validate(this.ping.entry,e),this.request(this.ping.entry,e)}}t.a=s},function(e,t,r){'use strict';Object.defineProperty(t,'__esModule',{value:!0});var n=r(0);r.d(t,'Client',function(){return n.a});var a=r(7);r.d(t,'OIDCCredentialAgent',function(){return a.a});var s=r(24);r.d(t,'createTemporaryCredentials',function(){return s.a}),r.d(t,'credentialInformation',function(){return s.b});var o=r(2);r.d(t,'fromNow',function(){return o.a}),r.d(t,'fromNowJSON',function(){return o.b}),r.d(t,'slugid',function(){return o.c}),r.d(t,'nice',function(){return o.d}),r.d(t,'v4',function(){return o.e}),r.d(t,'parseTime',function(){return o.f});var i=r(6);r.d(t,'WebListener',function(){return i.a});var u=r(1);r.d(t,'request',function(){return u.a});var l=r(4);r.d(t,'Auth',function(){return l.a});var d=r(8);r.d(t,'AuthEvents',function(){return d.a});var p=r(9);r.d(t,'AwsProvisioner',function(){return p.a});var y=r(10);r.d(t,'AwsProvisionerEvents',function(){return y.a});var c=r(11);r.d(t,'Github',function(){return c.a});var m=r(12);r.d(t,'GithubEvents',function(){return m.a});var k=r(13);r.d(t,'Hooks',function(){return k.a});var g=r(14);r.d(t,'Index',function(){return g.a});var h=r(15);r.d(t,'Login',function(){return h.a});var q=r(16);r.d(t,'Notify',function(){return q.a});var b=r(17);r.d(t,'Pulse',function(){return b.a});var v=r(18);r.d(t,'PurgeCache',function(){return v.a});var f=r(19);r.d(t,'PurgeCacheEvents',function(){return f.a});var I=r(20);r.d(t,'Queue',function(){return I.a});var w=r(21);r.d(t,'QueueEvents',function(){return w.a});var T=r(22);r.d(t,'Secrets',function(){return T.a});var x=r(23);r.d(t,'TreeherderEvents',function(){return x.a})},function(e,t,r){'use strict';var n=r(25),a=r(2),s=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};t.a=class{constructor(e){Object.defineProperty(this,'handleMessage',{enumerable:!0,writable:!0,value:(t)=>{let e;try{e=JSON.parse(t.data)}catch(e){return this.emitter.emit('error',e)}if('string'!=typeof e.id)return this.emitter.emit('error',new Error('Message has no id'));switch(this._pendingPromises=this._pendingPromises.filter((t)=>{return t.id===e.id?('error'===e.event?t.reject(e.payload):t.resolve(e.payload),!1):t}),e.event){case'ready':case'bound':case'message':case'error':return this.emitter.emit(e.event,e.payload||null);default:this.emit('error',new Error('Unknown event type from server'));}}}),Object.defineProperty(this,'handleError',{enumerable:!0,writable:!0,value:()=>this.emitter.emit('error',new Error('WebSocket error'))}),Object.defineProperty(this,'handleClose',{enumerable:!0,writable:!0,value:()=>{this.emitter.emit('close')}}),this.emitter=new n.a,this.options=s({baseUrl:'wss://events.taskcluster.net/v1',reconnectInterval:5e3},e),this._bindings=[],this._pendingPromises=[]}on(e,t){return this.emitter.on(e,t)}off(e,t){return this.emitter.off(e,t)}isOpen(){return this.socket&&this.socket.readyState===WebSocket.OPEN}isConnected(){return this.socket&&this.socket.readyState!==WebSocket.CLOSED}connect(){return new Promise(function(e,t){var r,n,a,s;return this.isConnected()?e(Promise.resolve()):(({baseUrl:r}=this.options),n=r.endsWith('/')?`${r}listen/websocket`:`${r}/listen/websocket`,this.socket=new WebSocket(n),this.socket.addEventListener('message',this.handleMessage),this.socket.addEventListener('error',this.handleError),this.socket.addEventListener('close',this.handleClose),Promise.resolve(new Promise((e,t)=>{this.socket.addEventListener('error',t),this.socket.addEventListener('close',t),this.socket.addEventListener('open',()=>{this.socket.removeEventListener('error',t),this.socket.removeEventListener('close',t),e()})})).then(function(){try{return a=Promise.all(this._bindings.map((e)=>this._send('bind',e))),s=new Promise((e,t)=>{const r=this.on('ready',e),n=this.on('error',t),a=this.on('close',t),s=()=>{r(),n(),a()};this.on('ready',s),this.on('error',s),this.on('close',s)}),e(a.then(()=>{return clearInterval(this.connectInterval),this.connectInterval=setInterval(()=>{this.isConnected()||this.connect().then(()=>this.emitter.emit('reconnect'))},this.options.reconnectInterval),s}))}catch(e){return t(e)}}.bind(this),t))}.bind(this))}_send(e,t){if(!this.isOpen())throw new Error('Cannot send message if socket is not OPEN');const n=r.i(a.e)();return new Promise((r,a)=>{this._pendingPromises.push({id:n,resolve:r,reject:a}),this.socket.send(JSON.stringify({method:e,id:n,options:t}))})}bind(e){return this._bindings.push(e),this.isOpen()?this._send('bind',e):Promise.resolve()}close(){return this.isConnected()?new Promise((e)=>{clearInterval(this.connectInterval),this.emitter.on('close',e),this.socket.close()}):Promise.resolve()}}},function(e,t,r){'use strict';var n=r(1);class a{constructor({accessToken:e,oidcProvider:t}){this._accessToken=e,this.oidcProvider=t}set accessToken(e){this._accessToken=e,this.credentialsPromise=null}get accessToken(){return this._accessToken}getCredentials(){if(this.credentialsPromise&&this.credentialsExpire>new Date)return this.credentialsPromise;const e=`${'https://login.taskcluster.net'}/v1/oidc-credentials/${this.oidcProvider}`;return this.credentialsPromise=r.i(n.a)(e,{headers:{Authorization:`Bearer ${this.accessToken}`}}).then((e)=>{return this.credentialsExpire=new Date(e.expires),e.credentials}).catch((e)=>{throw this.credentialsPromise=null,e}),this.credentialsPromise}}t.a=a},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'',exchangePrefix:'exchange/taskcluster-auth/v1/'},e))}clientCreated(e){return this.normalizePattern({type:'topic-exchange',exchange:'client-created',name:'clientCreated',routingKey:[{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/auth/v1/client-message.json#'},e)}clientUpdated(e){return this.normalizePattern({type:'topic-exchange',exchange:'client-updated',name:'clientUpdated',routingKey:[{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/auth/v1/client-message.json#'},e)}clientDeleted(e){return this.normalizePattern({type:'topic-exchange',exchange:'client-deleted',name:'clientDeleted',routingKey:[{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/auth/v1/client-message.json#'},e)}roleCreated(e){return this.normalizePattern({type:'topic-exchange',exchange:'role-created',name:'roleCreated',routingKey:[{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/auth/v1/role-message.json#'},e)}roleUpdated(e){return this.normalizePattern({type:'topic-exchange',exchange:'role-updated',name:'roleUpdated',routingKey:[{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/auth/v1/role-message.json#'},e)}roleDeleted(e){return this.normalizePattern({type:'topic-exchange',exchange:'role-deleted',name:'roleDeleted',routingKey:[{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/auth/v1/role-message.json#'},e)}}t.a=s},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'https://aws-provisioner.taskcluster.net/v1',exchangePrefix:''},e)),this.listWorkerTypeSummaries.entry={type:'function',method:'get',route:'/list-worker-type-summaries',query:[],args:[],name:'listWorkerTypeSummaries',stability:'stable',output:!0},this.createWorkerType.entry={type:'function',method:'put',route:'/worker-type/<workerType>',query:[],args:['workerType'],name:'createWorkerType',stability:'stable',scopes:[['aws-provisioner:manage-worker-type:<workerType>']],input:!0,output:!0},this.updateWorkerType.entry={type:'function',method:'post',route:'/worker-type/<workerType>/update',query:[],args:['workerType'],name:'updateWorkerType',stability:'stable',scopes:[['aws-provisioner:manage-worker-type:<workerType>']],input:!0,output:!0},this.workerTypeLastModified.entry={type:'function',method:'get',route:'/worker-type-last-modified/<workerType>',query:[],args:['workerType'],name:'workerTypeLastModified',stability:'stable',output:!0},this.workerType.entry={type:'function',method:'get',route:'/worker-type/<workerType>',query:[],args:['workerType'],name:'workerType',stability:'stable',scopes:[['aws-provisioner:view-worker-type:<workerType>'],['aws-provisioner:manage-worker-type:<workerType>']],output:!0},this.removeWorkerType.entry={type:'function',method:'delete',route:'/worker-type/<workerType>',query:[],args:['workerType'],name:'removeWorkerType',stability:'stable',scopes:[['aws-provisioner:manage-worker-type:<workerType>']]},this.listWorkerTypes.entry={type:'function',method:'get',route:'/list-worker-types',query:[],args:[],name:'listWorkerTypes',stability:'stable',output:!0},this.createSecret.entry={type:'function',method:'put',route:'/secret/<token>',query:[],args:['token'],name:'createSecret',stability:'stable',scopes:[['aws-provisioner:create-secret:<workerType>']],input:!0},this.getSecret.entry={type:'function',method:'get',route:'/secret/<token>',query:[],args:['token'],name:'getSecret',stability:'stable',output:!0},this.instanceStarted.entry={type:'function',method:'get',route:'/instance-started/<instanceId>/<token>',query:[],args:['instanceId','token'],name:'instanceStarted',stability:'stable'},this.removeSecret.entry={type:'function',method:'delete',route:'/secret/<token>',query:[],args:['token'],name:'removeSecret',stability:'stable'},this.getLaunchSpecs.entry={type:'function',method:'get',route:'/worker-type/<workerType>/launch-specifications',query:[],args:['workerType'],name:'getLaunchSpecs',stability:'experimental',scopes:[['aws-provisioner:view-worker-type:<workerType>'],['aws-provisioner:manage-worker-type:<workerType>']],output:!0},this.state.entry={type:'function',method:'get',route:'/state/<workerType>',query:[],args:['workerType'],name:'state',stability:'stable'},this.backendStatus.entry={type:'function',method:'get',route:'/backend-status',query:[],args:[],name:'backendStatus',stability:'experimental',output:!0},this.ping.entry={type:'function',method:'get',route:'/ping',query:[],args:[],name:'ping',stability:'stable'}}listWorkerTypeSummaries(...e){return this.validate(this.listWorkerTypeSummaries.entry,e),this.request(this.listWorkerTypeSummaries.entry,e)}createWorkerType(...e){return this.validate(this.createWorkerType.entry,e),this.request(this.createWorkerType.entry,e)}updateWorkerType(...e){return this.validate(this.updateWorkerType.entry,e),this.request(this.updateWorkerType.entry,e)}workerTypeLastModified(...e){return this.validate(this.workerTypeLastModified.entry,e),this.request(this.workerTypeLastModified.entry,e)}workerType(...e){return this.validate(this.workerType.entry,e),this.request(this.workerType.entry,e)}removeWorkerType(...e){return this.validate(this.removeWorkerType.entry,e),this.request(this.removeWorkerType.entry,e)}listWorkerTypes(...e){return this.validate(this.listWorkerTypes.entry,e),this.request(this.listWorkerTypes.entry,e)}createSecret(...e){return this.validate(this.createSecret.entry,e),this.request(this.createSecret.entry,e)}getSecret(...e){return this.validate(this.getSecret.entry,e),this.request(this.getSecret.entry,e)}instanceStarted(...e){return this.validate(this.instanceStarted.entry,e),this.request(this.instanceStarted.entry,e)}removeSecret(...e){return this.validate(this.removeSecret.entry,e),this.request(this.removeSecret.entry,e)}getLaunchSpecs(...e){return this.validate(this.getLaunchSpecs.entry,e),this.request(this.getLaunchSpecs.entry,e)}state(...e){return this.validate(this.state.entry,e),this.request(this.state.entry,e)}backendStatus(...e){return this.validate(this.backendStatus.entry,e),this.request(this.backendStatus.entry,e)}ping(...e){return this.validate(this.ping.entry,e),this.request(this.ping.entry,e)}}t.a=s},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'',exchangePrefix:'exchange/taskcluster-aws-provisioner/v1/'},e))}workerTypeCreated(e){return this.normalizePattern({type:'topic-exchange',exchange:'worker-type-created',name:'workerTypeCreated',routingKey:[{name:'routingKeyKind',constant:'primary',multipleWords:!1,required:!0},{name:'workerType',multipleWords:!1,required:!0},{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-message.json#'},e)}workerTypeUpdated(e){return this.normalizePattern({type:'topic-exchange',exchange:'worker-type-updated',name:'workerTypeUpdated',routingKey:[{name:'routingKeyKind',constant:'primary',multipleWords:!1,required:!0},{name:'workerType',multipleWords:!1,required:!0},{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-message.json#'},e)}workerTypeRemoved(e){return this.normalizePattern({type:'topic-exchange',exchange:'worker-type-removed',name:'workerTypeRemoved',routingKey:[{name:'routingKeyKind',constant:'primary',multipleWords:!1,required:!0},{name:'workerType',multipleWords:!1,required:!0},{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/aws-provisioner/v1/worker-type-message.json#'},e)}}t.a=s},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'https://github.taskcluster.net/v1',exchangePrefix:''},e)),this.githubWebHookConsumer.entry={type:'function',method:'post',route:'/github',query:[],args:[],name:'githubWebHookConsumer',stability:'experimental'},this.builds.entry={type:'function',method:'get',route:'/builds',query:['continuationToken','limit','organization','repository','sha'],args:[],name:'builds',stability:'experimental',output:!0},this.badge.entry={type:'function',method:'get',route:'/repository/<owner>/<repo>/<branch>/badge.svg',query:[],args:['owner','repo','branch'],name:'badge',stability:'experimental'},this.repository.entry={type:'function',method:'get',route:'/repository/<owner>/<repo>',query:[],args:['owner','repo'],name:'repository',stability:'experimental',output:!0},this.latest.entry={type:'function',method:'get',route:'/repository/<owner>/<repo>/<branch>/latest',query:[],args:['owner','repo','branch'],name:'latest',stability:'experimental'},this.createStatus.entry={type:'function',method:'post',route:'/repository/<owner>/<repo>/statuses/<sha>',query:[],args:['owner','repo','sha'],name:'createStatus',stability:'experimental',scopes:{AllOf:['github:create-status:<owner>/<repo>']},input:!0},this.createComment.entry={type:'function',method:'post',route:'/repository/<owner>/<repo>/issues/<number>/comments',query:[],args:['owner','repo','number'],name:'createComment',stability:'experimental',scopes:{AllOf:['github:create-comment:<owner>/<repo>']},input:!0},this.ping.entry={type:'function',method:'get',route:'/ping',query:[],args:[],name:'ping',stability:'stable'}}githubWebHookConsumer(...e){return this.validate(this.githubWebHookConsumer.entry,e),this.request(this.githubWebHookConsumer.entry,e)}builds(...e){return this.validate(this.builds.entry,e),this.request(this.builds.entry,e)}badge(...e){return this.validate(this.badge.entry,e),this.request(this.badge.entry,e)}repository(...e){return this.validate(this.repository.entry,e),this.request(this.repository.entry,e)}latest(...e){return this.validate(this.latest.entry,e),this.request(this.latest.entry,e)}createStatus(...e){return this.validate(this.createStatus.entry,e),this.request(this.createStatus.entry,e)}createComment(...e){return this.validate(this.createComment.entry,e),this.request(this.createComment.entry,e)}ping(...e){return this.validate(this.ping.entry,e),this.request(this.ping.entry,e)}}t.a=s},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'',exchangePrefix:'exchange/taskcluster-github/v1/'},e))}pullRequest(e){return this.normalizePattern({type:'topic-exchange',exchange:'pull-request',name:'pullRequest',routingKey:[{name:'routingKeyKind',constant:'primary',multipleWords:!1,required:!0},{name:'organization',multipleWords:!1,required:!0},{name:'repository',multipleWords:!1,required:!0},{name:'action',multipleWords:!1,required:!0}],schema:'http://schemas.taskcluster.net/github/v1/github-pull-request-message.json#'},e)}push(e){return this.normalizePattern({type:'topic-exchange',exchange:'push',name:'push',routingKey:[{name:'routingKeyKind',constant:'primary',multipleWords:!1,required:!0},{name:'organization',multipleWords:!1,required:!0},{name:'repository',multipleWords:!1,required:!0}],schema:'http://schemas.taskcluster.net/github/v1/github-push-message.json#'},e)}release(e){return this.normalizePattern({type:'topic-exchange',exchange:'release',name:'release',routingKey:[{name:'routingKeyKind',constant:'primary',multipleWords:!1,required:!0},{name:'organization',multipleWords:!1,required:!0},{name:'repository',multipleWords:!1,required:!0}],schema:'http://schemas.taskcluster.net/github/v1/github-release-message.json#'},e)}}t.a=s},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'https://hooks.taskcluster.net/v1',exchangePrefix:''},e)),this.listHookGroups.entry={type:'function',method:'get',route:'/hooks',query:[],args:[],name:'listHookGroups',stability:'experimental',output:!0},this.listHooks.entry={type:'function',method:'get',route:'/hooks/<hookGroupId>',query:[],args:['hookGroupId'],name:'listHooks',stability:'experimental',output:!0},this.hook.entry={type:'function',method:'get',route:'/hooks/<hookGroupId>/<hookId>',query:[],args:['hookGroupId','hookId'],name:'hook',stability:'experimental',output:!0},this.getHookStatus.entry={type:'function',method:'get',route:'/hooks/<hookGroupId>/<hookId>/status',query:[],args:['hookGroupId','hookId'],name:'getHookStatus',stability:'experimental',output:!0},this.getHookSchedule.entry={type:'function',method:'get',route:'/hooks/<hookGroupId>/<hookId>/schedule',query:[],args:['hookGroupId','hookId'],name:'getHookSchedule',stability:'deprecated',output:!0},this.createHook.entry={type:'function',method:'put',route:'/hooks/<hookGroupId>/<hookId>',query:[],args:['hookGroupId','hookId'],name:'createHook',stability:'experimental',scopes:{AllOf:['hooks:modify-hook:<hookGroupId>/<hookId>','assume:hook-id:<hookGroupId>/<hookId>']},input:!0,output:!0},this.updateHook.entry={type:'function',method:'post',route:'/hooks/<hookGroupId>/<hookId>',query:[],args:['hookGroupId','hookId'],name:'updateHook',stability:'experimental',scopes:{AllOf:['hooks:modify-hook:<hookGroupId>/<hookId>','assume:hook-id:<hookGroupId>/<hookId>']},input:!0,output:!0},this.removeHook.entry={type:'function',method:'delete',route:'/hooks/<hookGroupId>/<hookId>',query:[],args:['hookGroupId','hookId'],name:'removeHook',stability:'experimental',scopes:{AllOf:['hooks:modify-hook:<hookGroupId>/<hookId>']}},this.triggerHook.entry={type:'function',method:'post',route:'/hooks/<hookGroupId>/<hookId>/trigger',query:[],args:['hookGroupId','hookId'],name:'triggerHook',stability:'experimental',scopes:{AllOf:['hooks:trigger-hook:<hookGroupId>/<hookId>']},input:!0,output:!0},this.getTriggerToken.entry={type:'function',method:'get',route:'/hooks/<hookGroupId>/<hookId>/token',query:[],args:['hookGroupId','hookId'],name:'getTriggerToken',stability:'experimental',scopes:{AllOf:['hooks:get-trigger-token:<hookGroupId>/<hookId>']},output:!0},this.resetTriggerToken.entry={type:'function',method:'post',route:'/hooks/<hookGroupId>/<hookId>/token',query:[],args:['hookGroupId','hookId'],name:'resetTriggerToken',stability:'experimental',scopes:{AllOf:['hooks:reset-trigger-token:<hookGroupId>/<hookId>']},output:!0},this.triggerHookWithToken.entry={type:'function',method:'post',route:'/hooks/<hookGroupId>/<hookId>/trigger/<token>',query:[],args:['hookGroupId','hookId','token'],name:'triggerHookWithToken',stability:'experimental',input:!0,output:!0},this.ping.entry={type:'function',method:'get',route:'/ping',query:[],args:[],name:'ping',stability:'stable'}}listHookGroups(...e){return this.validate(this.listHookGroups.entry,e),this.request(this.listHookGroups.entry,e)}listHooks(...e){return this.validate(this.listHooks.entry,e),this.request(this.listHooks.entry,e)}hook(...e){return this.validate(this.hook.entry,e),this.request(this.hook.entry,e)}getHookStatus(...e){return this.validate(this.getHookStatus.entry,e),this.request(this.getHookStatus.entry,e)}getHookSchedule(...e){return this.validate(this.getHookSchedule.entry,e),this.request(this.getHookSchedule.entry,e)}createHook(...e){return this.validate(this.createHook.entry,e),this.request(this.createHook.entry,e)}updateHook(...e){return this.validate(this.updateHook.entry,e),this.request(this.updateHook.entry,e)}removeHook(...e){return this.validate(this.removeHook.entry,e),this.request(this.removeHook.entry,e)}triggerHook(...e){return this.validate(this.triggerHook.entry,e),this.request(this.triggerHook.entry,e)}getTriggerToken(...e){return this.validate(this.getTriggerToken.entry,e),this.request(this.getTriggerToken.entry,e)}resetTriggerToken(...e){return this.validate(this.resetTriggerToken.entry,e),this.request(this.resetTriggerToken.entry,e)}triggerHookWithToken(...e){return this.validate(this.triggerHookWithToken.entry,e),this.request(this.triggerHookWithToken.entry,e)}ping(...e){return this.validate(this.ping.entry,e),this.request(this.ping.entry,e)}}t.a=s},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'https://index.taskcluster.net/v1',exchangePrefix:''},e)),this.findTask.entry={type:'function',method:'get',route:'/task/<indexPath>',query:[],args:['indexPath'],name:'findTask',stability:'stable',output:!0},this.listNamespaces.entry={type:'function',method:'post',route:'/namespaces/<namespace>',query:[],args:['namespace'],name:'listNamespaces',stability:'stable',input:!0,output:!0},this.listTasks.entry={type:'function',method:'post',route:'/tasks/<namespace>',query:[],args:['namespace'],name:'listTasks',stability:'stable',input:!0,output:!0},this.insertTask.entry={type:'function',method:'put',route:'/task/<namespace>',query:[],args:['namespace'],name:'insertTask',stability:'stable',scopes:[['index:insert-task:<namespace>']],input:!0,output:!0},this.findArtifactFromTask.entry={type:'function',method:'get',route:'/task/<indexPath>/artifacts/<name>',query:[],args:['indexPath','name'],name:'findArtifactFromTask',stability:'stable',scopes:[['queue:get-artifact:<name>']]},this.ping.entry={type:'function',method:'get',route:'/ping',query:[],args:[],name:'ping',stability:'stable'}}findTask(...e){return this.validate(this.findTask.entry,e),this.request(this.findTask.entry,e)}listNamespaces(...e){return this.validate(this.listNamespaces.entry,e),this.request(this.listNamespaces.entry,e)}listTasks(...e){return this.validate(this.listTasks.entry,e),this.request(this.listTasks.entry,e)}insertTask(...e){return this.validate(this.insertTask.entry,e),this.request(this.insertTask.entry,e)}findArtifactFromTask(...e){return this.validate(this.findArtifactFromTask.entry,e),this.request(this.findArtifactFromTask.entry,e)}ping(...e){return this.validate(this.ping.entry,e),this.request(this.ping.entry,e)}}t.a=s},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'https://login.taskcluster.net/v1',exchangePrefix:''},e)),this.oidcCredentials.entry={type:'function',method:'get',route:'/oidc-credentials/<provider>',query:[],args:['provider'],name:'oidcCredentials',stability:'experimental',output:!0},this.ping.entry={type:'function',method:'get',route:'/ping',query:[],args:[],name:'ping',stability:'stable'}}oidcCredentials(...e){return this.validate(this.oidcCredentials.entry,e),this.request(this.oidcCredentials.entry,e)}ping(...e){return this.validate(this.ping.entry,e),this.request(this.ping.entry,e)}}t.a=s},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'https://notify.taskcluster.net/v1',exchangePrefix:''},e)),this.email.entry={type:'function',method:'post',route:'/email',query:[],args:[],name:'email',stability:'experimental',scopes:{AllOf:['notify:email:<address>']},input:!0},this.pulse.entry={type:'function',method:'post',route:'/pulse',query:[],args:[],name:'pulse',stability:'experimental',scopes:{AllOf:['notify:pulse:<routingKey>']},input:!0},this.irc.entry={type:'function',method:'post',route:'/irc',query:[],args:[],name:'irc',stability:'experimental',scopes:{AllOf:[{if:'channelRequest',then:{AllOf:['notify:irc-channel:<channel>']}},{if:'userRequest',then:{AllOf:['notify:irc-user:<user>']}}]},input:!0},this.ping.entry={type:'function',method:'get',route:'/ping',query:[],args:[],name:'ping',stability:'stable'}}email(...e){return this.validate(this.email.entry,e),this.request(this.email.entry,e)}pulse(...e){return this.validate(this.pulse.entry,e),this.request(this.pulse.entry,e)}irc(...e){return this.validate(this.irc.entry,e),this.request(this.irc.entry,e)}ping(...e){return this.validate(this.ping.entry,e),this.request(this.ping.entry,e)}}t.a=s},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'https://pulse.taskcluster.net/v1',exchangePrefix:''},e)),this.overview.entry={type:'function',method:'get',route:'/overview',query:[],args:[],name:'overview',stability:'experimental',output:!0},this.listNamespaces.entry={type:'function',method:'get',route:'/namespaces',query:['limit','continuation'],args:[],name:'listNamespaces',stability:'experimental',output:!0},this.namespace.entry={type:'function',method:'get',route:'/namespace/<namespace>',query:[],args:['namespace'],name:'namespace',stability:'experimental',output:!0},this.claimNamespace.entry={type:'function',method:'post',route:'/namespace/<namespace>',query:[],args:['namespace'],name:'claimNamespace',stability:'experimental',scopes:[['pulse:namespace:<namespace>']],input:!0,output:!0},this.ping.entry={type:'function',method:'get',route:'/ping',query:[],args:[],name:'ping',stability:'stable'}}overview(...e){return this.validate(this.overview.entry,e),this.request(this.overview.entry,e)}listNamespaces(...e){return this.validate(this.listNamespaces.entry,e),this.request(this.listNamespaces.entry,e)}namespace(...e){return this.validate(this.namespace.entry,e),this.request(this.namespace.entry,e)}claimNamespace(...e){return this.validate(this.claimNamespace.entry,e),this.request(this.claimNamespace.entry,e)}ping(...e){return this.validate(this.ping.entry,e),this.request(this.ping.entry,e)}}t.a=s},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'https://purge-cache.taskcluster.net/v1',exchangePrefix:''},e)),this.purgeCache.entry={type:'function',method:'post',route:'/purge-cache/<provisionerId>/<workerType>',query:[],args:['provisionerId','workerType'],name:'purgeCache',stability:'experimental',scopes:[['purge-cache:<provisionerId>/<workerType>:<cacheName>']],input:!0},this.allPurgeRequests.entry={type:'function',method:'get',route:'/purge-cache/list',query:['continuationToken','limit'],args:[],name:'allPurgeRequests',stability:'experimental',output:!0},this.purgeRequests.entry={type:'function',method:'get',route:'/purge-cache/<provisionerId>/<workerType>',query:['since'],args:['provisionerId','workerType'],name:'purgeRequests',stability:'experimental',output:!0},this.ping.entry={type:'function',method:'get',route:'/ping',query:[],args:[],name:'ping',stability:'stable'}}purgeCache(...e){return this.validate(this.purgeCache.entry,e),this.request(this.purgeCache.entry,e)}allPurgeRequests(...e){return this.validate(this.allPurgeRequests.entry,e),this.request(this.allPurgeRequests.entry,e)}purgeRequests(...e){return this.validate(this.purgeRequests.entry,e),this.request(this.purgeRequests.entry,e)}ping(...e){return this.validate(this.ping.entry,e),this.request(this.ping.entry,e)}}t.a=s},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'',exchangePrefix:'exchange/taskcluster-purge-cache/v1/'},e))}purgeCache(e){return this.normalizePattern({type:'topic-exchange',exchange:'purge-cache',name:'purgeCache',routingKey:[{name:'routingKeyKind',constant:'primary',multipleWords:!1,required:!0},{name:'provisionerId',multipleWords:!1,required:!0},{name:'workerType',multipleWords:!1,required:!0}],schema:'http://schemas.taskcluster.net/purge-cache/v1/purge-cache-message.json#'},e)}}t.a=s},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'https://queue.taskcluster.net/v1',exchangePrefix:''},e)),this.task.entry={type:'function',method:'get',route:'/task/<taskId>',query:[],args:['taskId'],name:'task',stability:'stable',output:!0},this.status.entry={type:'function',method:'get',route:'/task/<taskId>/status',query:[],args:['taskId'],name:'status',stability:'stable',output:!0},this.listTaskGroup.entry={type:'function',method:'get',route:'/task-group/<taskGroupId>/list',query:['continuationToken','limit'],args:['taskGroupId'],name:'listTaskGroup',stability:'stable',output:!0},this.listDependentTasks.entry={type:'function',method:'get',route:'/task/<taskId>/dependents',query:['continuationToken','limit'],args:['taskId'],name:'listDependentTasks',stability:'stable',output:!0},this.createTask.entry={type:'function',method:'put',route:'/task/<taskId>',query:[],args:['taskId'],name:'createTask',stability:'stable',scopes:[['queue:create-task:<priority>:<provisionerId>/<workerType>','queue:scheduler-id:<schedulerId>']],input:!0,output:!0},this.defineTask.entry={type:'function',method:'post',route:'/task/<taskId>/define',query:[],args:['taskId'],name:'defineTask',stability:'deprecated',scopes:[['queue:create-task:<priority>:<provisionerId>/<workerType>','queue:scheduler-id:<schedulerId>']],input:!0,output:!0},this.scheduleTask.entry={type:'function',method:'post',route:'/task/<taskId>/schedule',query:[],args:['taskId'],name:'scheduleTask',stability:'stable',scopes:[['queue:schedule-task','assume:scheduler-id:<schedulerId>/<taskGroupId>'],['queue:schedule-task:<schedulerId>/<taskGroupId>/<taskId>']],output:!0},this.rerunTask.entry={type:'function',method:'post',route:'/task/<taskId>/rerun',query:[],args:['taskId'],name:'rerunTask',stability:'deprecated',scopes:[['queue:rerun-task','assume:scheduler-id:<schedulerId>/<taskGroupId>'],['queue:rerun-task:<schedulerId>/<taskGroupId>/<taskId>']],output:!0},this.cancelTask.entry={type:'function',method:'post',route:'/task/<taskId>/cancel',query:[],args:['taskId'],name:'cancelTask',stability:'stable',scopes:[['queue:cancel-task','assume:scheduler-id:<schedulerId>/<taskGroupId>'],['queue:cancel-task:<schedulerId>/<taskGroupId>/<taskId>']],output:!0},this.pollTaskUrls.entry={type:'function',method:'get',route:'/poll-task-url/<provisionerId>/<workerType>',query:[],args:['provisionerId','workerType'],name:'pollTaskUrls',stability:'stable',scopes:[['queue:poll-task-urls','assume:worker-type:<provisionerId>/<workerType>'],['queue:poll-task-urls:<provisionerId>/<workerType>']],output:!0},this.claimWork.entry={type:'function',method:'post',route:'/claim-work/<provisionerId>/<workerType>',query:[],args:['provisionerId','workerType'],name:'claimWork',stability:'stable',scopes:[['queue:claim-work:<provisionerId>/<workerType>','queue:worker-id:<workerGroup>/<workerId>']],input:!0,output:!0},this.claimTask.entry={type:'function',method:'post',route:'/task/<taskId>/runs/<runId>/claim',query:[],args:['taskId','runId'],name:'claimTask',stability:'stable',scopes:[['queue:claim-task','assume:worker-type:<provisionerId>/<workerType>','assume:worker-id:<workerGroup>/<workerId>'],['queue:claim-task:<provisionerId>/<workerType>','queue:worker-id:<workerGroup>/<workerId>']],input:!0,output:!0},this.reclaimTask.entry={type:'function',method:'post',route:'/task/<taskId>/runs/<runId>/reclaim',query:[],args:['taskId','runId'],name:'reclaimTask',stability:'stable',scopes:[['queue:claim-task','assume:worker-id:<workerGroup>/<workerId>'],['queue:reclaim-task:<taskId>/<runId>']],output:!0},this.reportCompleted.entry={type:'function',method:'post',route:'/task/<taskId>/runs/<runId>/completed',query:[],args:['taskId','runId'],name:'reportCompleted',stability:'stable',scopes:[['queue:resolve-task','assume:worker-id:<workerGroup>/<workerId>'],['queue:resolve-task:<taskId>/<runId>']],output:!0},this.reportFailed.entry={type:'function',method:'post',route:'/task/<taskId>/runs/<runId>/failed',query:[],args:['taskId','runId'],name:'reportFailed',stability:'stable',scopes:[['queue:resolve-task','assume:worker-id:<workerGroup>/<workerId>'],['queue:resolve-task:<taskId>/<runId>']],output:!0},this.reportException.entry={type:'function',method:'post',route:'/task/<taskId>/runs/<runId>/exception',query:[],args:['taskId','runId'],name:'reportException',stability:'stable',scopes:[['queue:resolve-task','assume:worker-id:<workerGroup>/<workerId>'],['queue:resolve-task:<taskId>/<runId>']],input:!0,output:!0},this.createArtifact.entry={type:'function',method:'post',route:'/task/<taskId>/runs/<runId>/artifacts/<name>',query:[],args:['taskId','runId','name'],name:'createArtifact',stability:'stable',scopes:[['queue:create-artifact:<name>','assume:worker-id:<workerGroup>/<workerId>'],['queue:create-artifact:<taskId>/<runId>']],input:!0,output:!0},this.completeArtifact.entry={type:'function',method:'put',route:'/task/<taskId>/runs/<runId>/artifacts/<name>',query:[],args:['taskId','runId','name'],name:'completeArtifact',stability:'experimental',scopes:[['queue:create-artifact:<name>','assume:worker-id:<workerGroup>/<workerId>'],['queue:create-artifact:<taskId>/<runId>']],input:!0},this.getArtifact.entry={type:'function',method:'get',route:'/task/<taskId>/runs/<runId>/artifacts/<name>',query:[],args:['taskId','runId','name'],name:'getArtifact',stability:'stable',scopes:[['queue:get-artifact:<name>']]},this.getLatestArtifact.entry={type:'function',method:'get',route:'/task/<taskId>/artifacts/<name>',query:[],args:['taskId','name'],name:'getLatestArtifact',stability:'stable',scopes:[['queue:get-artifact:<name>']]},this.listArtifacts.entry={type:'function',method:'get',route:'/task/<taskId>/runs/<runId>/artifacts',query:['continuationToken','limit'],args:['taskId','runId'],name:'listArtifacts',stability:'experimental',output:!0},this.listLatestArtifacts.entry={type:'function',method:'get',route:'/task/<taskId>/artifacts',query:['continuationToken','limit'],args:['taskId'],name:'listLatestArtifacts',stability:'experimental',output:!0},this.listProvisioners.entry={type:'function',method:'get',route:'/provisioners',query:['continuationToken','limit'],args:[],name:'listProvisioners',stability:'experimental',output:!0},this.getProvisioner.entry={type:'function',method:'get',route:'/provisioners/<provisionerId>',query:[],args:['provisionerId'],name:'getProvisioner',stability:'experimental',output:!0},this.declareProvisioner.entry={type:'function',method:'put',route:'/provisioners/<provisionerId>',query:[],args:['provisionerId'],name:'declareProvisioner',stability:'experimental',scopes:[['queue:declare-provisioner:<provisionerId>#<property>']],input:!0,output:!0},this.pendingTasks.entry={type:'function',method:'get',route:'/pending/<provisionerId>/<workerType>',query:[],args:['provisionerId','workerType'],name:'pendingTasks',stability:'stable',output:!0},this.listWorkerTypes.entry={type:'function',method:'get',route:'/provisioners/<provisionerId>/worker-types',query:['continuationToken','limit'],args:['provisionerId'],name:'listWorkerTypes',stability:'experimental',output:!0},this.getWorkerType.entry={type:'function',method:'get',route:'/provisioners/<provisionerId>/worker-types/<workerType>',query:[],args:['provisionerId','workerType'],name:'getWorkerType',stability:'experimental',output:!0},this.declareWorkerType.entry={type:'function',method:'put',route:'/provisioners/<provisionerId>/worker-types/<workerType>',query:[],args:['provisionerId','workerType'],name:'declareWorkerType',stability:'experimental',scopes:[['queue:declare-worker-type:<provisionerId>/<workerType>#<property>']],input:!0,output:!0},this.listWorkers.entry={type:'function',method:'get',route:'/provisioners/<provisionerId>/worker-types/<workerType>/workers',query:['continuationToken','limit','quarantined'],args:['provisionerId','workerType'],name:'listWorkers',stability:'experimental',output:!0},this.getWorker.entry={type:'function',method:'get',route:'/provisioners/<provisionerId>/worker-types/<workerType>/workers/<workerGroup>/<workerId>',query:[],args:['provisionerId','workerType','workerGroup','workerId'],name:'getWorker',stability:'experimental',output:!0},this.quarantineWorker.entry={type:'function',method:'put',route:'/provisioners/<provisionerId>/worker-types/<workerType>/workers/<workerGroup>/<workerId>',query:[],args:['provisionerId','workerType','workerGroup','workerId'],name:'quarantineWorker',stability:'experimental',scopes:[['queue:quarantine-worker:<provisionerId>/<workerType>/<workerGroup>/<workerId>']],input:!0,output:!0},this.declareWorker.entry={type:'function',method:'put',route:'/provisioners/<provisionerId>/worker-types/<workerType>/<workerGroup>/<workerId>',query:[],args:['provisionerId','workerType','workerGroup','workerId'],name:'declareWorker',stability:'experimental',scopes:[['queue:declare-worker:<provisionerId>/<workerType>/<workerGroup>/<workerId>#<property>']],input:!0,output:!0},this.ping.entry={type:'function',method:'get',route:'/ping',query:[],args:[],name:'ping',stability:'stable'}}task(...e){return this.validate(this.task.entry,e),this.request(this.task.entry,e)}status(...e){return this.validate(this.status.entry,e),this.request(this.status.entry,e)}listTaskGroup(...e){return this.validate(this.listTaskGroup.entry,e),this.request(this.listTaskGroup.entry,e)}listDependentTasks(...e){return this.validate(this.listDependentTasks.entry,e),this.request(this.listDependentTasks.entry,e)}createTask(...e){return this.validate(this.createTask.entry,e),this.request(this.createTask.entry,e)}defineTask(...e){return this.validate(this.defineTask.entry,e),this.request(this.defineTask.entry,e)}scheduleTask(...e){return this.validate(this.scheduleTask.entry,e),this.request(this.scheduleTask.entry,e)}rerunTask(...e){return this.validate(this.rerunTask.entry,e),this.request(this.rerunTask.entry,e)}cancelTask(...e){return this.validate(this.cancelTask.entry,e),this.request(this.cancelTask.entry,e)}pollTaskUrls(...e){return this.validate(this.pollTaskUrls.entry,e),this.request(this.pollTaskUrls.entry,e)}claimWork(...e){return this.validate(this.claimWork.entry,e),this.request(this.claimWork.entry,e)}claimTask(...e){return this.validate(this.claimTask.entry,e),this.request(this.claimTask.entry,e)}reclaimTask(...e){return this.validate(this.reclaimTask.entry,e),this.request(this.reclaimTask.entry,e)}reportCompleted(...e){return this.validate(this.reportCompleted.entry,e),this.request(this.reportCompleted.entry,e)}reportFailed(...e){return this.validate(this.reportFailed.entry,e),this.request(this.reportFailed.entry,e)}reportException(...e){return this.validate(this.reportException.entry,e),this.request(this.reportException.entry,e)}createArtifact(...e){return this.validate(this.createArtifact.entry,e),this.request(this.createArtifact.entry,e)}completeArtifact(...e){return this.validate(this.completeArtifact.entry,e),this.request(this.completeArtifact.entry,e)}getArtifact(...e){return this.validate(this.getArtifact.entry,e),this.request(this.getArtifact.entry,e)}getLatestArtifact(...e){return this.validate(this.getLatestArtifact.entry,e),this.request(this.getLatestArtifact.entry,e)}listArtifacts(...e){return this.validate(this.listArtifacts.entry,e),this.request(this.listArtifacts.entry,e)}listLatestArtifacts(...e){return this.validate(this.listLatestArtifacts.entry,e),this.request(this.listLatestArtifacts.entry,e)}listProvisioners(...e){return this.validate(this.listProvisioners.entry,e),this.request(this.listProvisioners.entry,e)}getProvisioner(...e){return this.validate(this.getProvisioner.entry,e),this.request(this.getProvisioner.entry,e)}declareProvisioner(...e){return this.validate(this.declareProvisioner.entry,e),this.request(this.declareProvisioner.entry,e)}pendingTasks(...e){return this.validate(this.pendingTasks.entry,e),this.request(this.pendingTasks.entry,e)}listWorkerTypes(...e){return this.validate(this.listWorkerTypes.entry,e),this.request(this.listWorkerTypes.entry,e)}getWorkerType(...e){return this.validate(this.getWorkerType.entry,e),this.request(this.getWorkerType.entry,e)}declareWorkerType(...e){return this.validate(this.declareWorkerType.entry,e),this.request(this.declareWorkerType.entry,e)}listWorkers(...e){return this.validate(this.listWorkers.entry,e),this.request(this.listWorkers.entry,e)}getWorker(...e){return this.validate(this.getWorker.entry,e),this.request(this.getWorker.entry,e)}quarantineWorker(...e){return this.validate(this.quarantineWorker.entry,e),this.request(this.quarantineWorker.entry,e)}declareWorker(...e){return this.validate(this.declareWorker.entry,e),this.request(this.declareWorker.entry,e)}ping(...e){return this.validate(this.ping.entry,e),this.request(this.ping.entry,e)}}t.a=s},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'',exchangePrefix:'exchange/taskcluster-queue/v1/'},e))}taskDefined(e){return this.normalizePattern({type:'topic-exchange',exchange:'task-defined',name:'taskDefined',routingKey:[{name:'routingKeyKind',constant:'primary',multipleWords:!1,required:!0},{name:'taskId',multipleWords:!1,required:!0},{name:'runId',multipleWords:!1,required:!1},{name:'workerGroup',multipleWords:!1,required:!1},{name:'workerId',multipleWords:!1,required:!1},{name:'provisionerId',multipleWords:!1,required:!0},{name:'workerType',multipleWords:!1,required:!0},{name:'schedulerId',multipleWords:!1,required:!0},{name:'taskGroupId',multipleWords:!1,required:!0},{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/queue/v1/task-defined-message.json#'},e)}taskPending(e){return this.normalizePattern({type:'topic-exchange',exchange:'task-pending',name:'taskPending',routingKey:[{name:'routingKeyKind',constant:'primary',multipleWords:!1,required:!0},{name:'taskId',multipleWords:!1,required:!0},{name:'runId',multipleWords:!1,required:!0},{name:'workerGroup',multipleWords:!1,required:!1},{name:'workerId',multipleWords:!1,required:!1},{name:'provisionerId',multipleWords:!1,required:!0},{name:'workerType',multipleWords:!1,required:!0},{name:'schedulerId',multipleWords:!1,required:!0},{name:'taskGroupId',multipleWords:!1,required:!0},{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/queue/v1/task-pending-message.json#'},e)}taskRunning(e){return this.normalizePattern({type:'topic-exchange',exchange:'task-running',name:'taskRunning',routingKey:[{name:'routingKeyKind',constant:'primary',multipleWords:!1,required:!0},{name:'taskId',multipleWords:!1,required:!0},{name:'runId',multipleWords:!1,required:!0},{name:'workerGroup',multipleWords:!1,required:!0},{name:'workerId',multipleWords:!1,required:!0},{name:'provisionerId',multipleWords:!1,required:!0},{name:'workerType',multipleWords:!1,required:!0},{name:'schedulerId',multipleWords:!1,required:!0},{name:'taskGroupId',multipleWords:!1,required:!0},{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/queue/v1/task-running-message.json#'},e)}artifactCreated(e){return this.normalizePattern({type:'topic-exchange',exchange:'artifact-created',name:'artifactCreated',routingKey:[{name:'routingKeyKind',constant:'primary',multipleWords:!1,required:!0},{name:'taskId',multipleWords:!1,required:!0},{name:'runId',multipleWords:!1,required:!0},{name:'workerGroup',multipleWords:!1,required:!0},{name:'workerId',multipleWords:!1,required:!0},{name:'provisionerId',multipleWords:!1,required:!0},{name:'workerType',multipleWords:!1,required:!0},{name:'schedulerId',multipleWords:!1,required:!0},{name:'taskGroupId',multipleWords:!1,required:!0},{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/queue/v1/artifact-created-message.json#'},e)}taskCompleted(e){return this.normalizePattern({type:'topic-exchange',exchange:'task-completed',name:'taskCompleted',routingKey:[{name:'routingKeyKind',constant:'primary',multipleWords:!1,required:!0},{name:'taskId',multipleWords:!1,required:!0},{name:'runId',multipleWords:!1,required:!0},{name:'workerGroup',multipleWords:!1,required:!0},{name:'workerId',multipleWords:!1,required:!0},{name:'provisionerId',multipleWords:!1,required:!0},{name:'workerType',multipleWords:!1,required:!0},{name:'schedulerId',multipleWords:!1,required:!0},{name:'taskGroupId',multipleWords:!1,required:!0},{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/queue/v1/task-completed-message.json#'},e)}taskFailed(e){return this.normalizePattern({type:'topic-exchange',exchange:'task-failed',name:'taskFailed',routingKey:[{name:'routingKeyKind',constant:'primary',multipleWords:!1,required:!0},{name:'taskId',multipleWords:!1,required:!0},{name:'runId',multipleWords:!1,required:!1},{name:'workerGroup',multipleWords:!1,required:!1},{name:'workerId',multipleWords:!1,required:!1},{name:'provisionerId',multipleWords:!1,required:!0},{name:'workerType',multipleWords:!1,required:!0},{name:'schedulerId',multipleWords:!1,required:!0},{name:'taskGroupId',multipleWords:!1,required:!0},{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/queue/v1/task-failed-message.json#'},e)}taskException(e){return this.normalizePattern({type:'topic-exchange',exchange:'task-exception',name:'taskException',routingKey:[{name:'routingKeyKind',constant:'primary',multipleWords:!1,required:!0},{name:'taskId',multipleWords:!1,required:!0},{name:'runId',multipleWords:!1,required:!1},{name:'workerGroup',multipleWords:!1,required:!1},{name:'workerId',multipleWords:!1,required:!1},{name:'provisionerId',multipleWords:!1,required:!0},{name:'workerType',multipleWords:!1,required:!0},{name:'schedulerId',multipleWords:!1,required:!0},{name:'taskGroupId',multipleWords:!1,required:!0},{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/queue/v1/task-exception-message.json#'},e)}taskGroupResolved(e){return this.normalizePattern({type:'topic-exchange',exchange:'task-group-resolved',name:'taskGroupResolved',routingKey:[{name:'routingKeyKind',constant:'primary',multipleWords:!1,required:!0},{name:'taskGroupId',multipleWords:!1,required:!0},{name:'schedulerId',multipleWords:!1,required:!0},{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/queue/v1/task-group-resolved.json#'},e)}}t.a=s},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'https://secrets.taskcluster.net/v1',exchangePrefix:''},e)),this.set.entry={type:'function',method:'put',route:'/secret/<name>',query:[],args:['name'],name:'set',stability:'stable',scopes:[['secrets:set:<name>']],input:!0},this.remove.entry={type:'function',method:'delete',route:'/secret/<name>',query:[],args:['name'],name:'remove',stability:'stable',scopes:[['secrets:set:<name>']]},this.get.entry={type:'function',method:'get',route:'/secret/<name>',query:[],args:['name'],name:'get',stability:'stable',scopes:[['secrets:get:<name>']],output:!0},this.list.entry={type:'function',method:'get',route:'/secrets',query:['continuationToken','limit'],args:[],name:'list',stability:'stable',output:!0},this.ping.entry={type:'function',method:'get',route:'/ping',query:[],args:[],name:'ping',stability:'stable'}}set(...e){return this.validate(this.set.entry,e),this.request(this.set.entry,e)}remove(...e){return this.validate(this.remove.entry,e),this.request(this.remove.entry,e)}get(...e){return this.validate(this.get.entry,e),this.request(this.get.entry,e)}list(...e){return this.validate(this.list.entry,e),this.request(this.list.entry,e)}ping(...e){return this.validate(this.ping.entry,e),this.request(this.ping.entry,e)}}t.a=s},function(e,t,r){'use strict';var n=r(0),a=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};class s extends n.a{constructor(e={}){super(a({baseUrl:'',exchangePrefix:'exchange/taskcluster-treeherder/v1/'},e))}jobs(e){return this.normalizePattern({type:'topic-exchange',exchange:'jobs',name:'jobs',routingKey:[{name:'destination',multipleWords:!1,required:!0},{name:'project',multipleWords:!1,required:!0},{name:'reserved',multipleWords:!0,required:!1}],schema:'http://schemas.taskcluster.net/taskcluster-treeherder/v1/pulse-job.json#'},e)}}t.a=s},function(e,t,r){'use strict';var n=r(3),a=r.n(n),s=r(2),o=r(4),i=Object.assign||function(e){for(var t,r=1;r<arguments.length;r++)for(var n in t=arguments[r],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e};const u=(...e)=>a.a.crypto.utils.algo.HMAC.create(...e),l=a.a.crypto.utils.algo.SHA256,d=a.a.crypto.utils.enc.Base64;t.a=(e)=>{if(!e)throw new Error('Missing required options');const t=new Date,n=i({start:t,scopes:[]},e),a=!!n.clientId;if(!n.credentials)throw new Error('options.credentials is required');if(!n.credentials.clientId)throw new Error('options.credentials.clientId is required');if(a&&n.clientId===n.credentials.clientId)throw new Error('Credential issuer must be different from the name');if(!n.credentials.accessToken)throw new Error('options.credentials.accessToken is required');if(null!=n.credentials.certificate)throw new Error(`Temporary credentials cannot be used to make new temporary credentials.
      Ensure that options.credentials.certificate is null.`);if(!(n.start instanceof Date))throw new Error('options.start must be a Date object');if(!(n.expiry instanceof Date))throw new Error('options.expiry must be a Date object');if(+n.expiry-n.start>2678400000)throw new Error('Credentials cannot span more than 31 days');if(!Array.isArray(n.scopes))throw new Error('options.scopes must be an array');n.scopes.forEach((e)=>{if('string'!=typeof e)throw new Error('options.scopes must be an array of strings')});const o={version:1,scopes:[...n.scopes],start:n.start.getTime(),expiry:n.expiry.getTime(),seed:r.i(s.e)()+r.i(s.e)(),signature:null,issuer:a?n.credentials.clientId:null},p=u(l,n.credentials.accessToken);p.update(`version:${o.version}\n`),a&&(p.update(`clientId:${n.clientId}\n`),p.update(`issuer:${n.credentials.clientId}\n`)),p.update(`seed:${o.seed}\n`),p.update(`start:${o.start}\n`),p.update(`expiry:${o.expiry}\n`),p.update('scopes:\n'),p.update(o.scopes.join('\n')),o.signature=p.finalize().toString(d);const y=u(l,n.credentials.accessToken).update(o.seed).finalize().toString(d).replace(/\+/g,'-').replace(/\//g,'_').replace(/=/g,'');return{accessToken:y,clientId:a?n.clientId:n.credentials.clientId,certificate:JSON.stringify(o)}};t.b=(e)=>new Promise(function(t,r){var n,a,s,i,u,l;let d;if(d=e.clientId,n={clientId:d,active:!0},e.certificate){let r=e.certificate;if('string'==typeof r)try{r=JSON.parse(r)}catch(e){return t(Promise.reject(e))}n.type='temporary',n.scopes=r.scopes,n.start=new Date(r.start),n.expiry=new Date(r.expiry),r.issuer&&(d=r.issuer)}else n.type='permanent';return a=new o.a,s=new o.a({credentials:e}),i=a.client(d).then((e)=>{const t=new Date(e.expires);(!n.expiry||n.expiry>t)&&(n.expiry=t),e.disabled&&(n.active=!1)}),u=s.currentScopes().then((e)=>{n.scopes=e.scopes}),Promise.resolve(Promise.all([i,u])).then(function(){try{return l=new Date,n.start&&n.start>l?n.active=!1:n.expiry&&n.expiry<l&&(n.active=!1),t(n)}catch(e){return r(e)}}.bind(this),r)}.bind(this))},function(e,t){'use strict';t.a=class{constructor(){Object.defineProperty(this,'events',{enumerable:!0,writable:!0,value:{}})}on(e,t){const r=this.events[e]||[];return r.push(t),this.events[e]=r,()=>this.off(e,t)}off(e,t){const r=this.events[e]||[];r.splice(r.indexOf(t)>>>0,1)}emit(e,...t){const r=this.events[e];r&&r[0]&&r.forEach((e)=>e(...t))}}},function(e){e.exports=t},function(e,t,r){e.exports=r(5)}])});
//# sourceMappingURL=index.js.map